Program001:[c++] This program helps to understand how to declare an array.
Program002:[c++] This program helps to understand how to declare a structure.
Program003:[c++] This program helps to understand how to declare a pointer.
Program004:[c++] This program helps to understand how to allocate memory dynamically in the heap.
Program005:[c++] This program helps to understand pointer to a structure.
Program006:[c++] This program helps to understand pass-by-value in parameter passing.
Program007:[c++] This program helps to understand pass-by-reference in parameter passing.
Program008:[c++] This program helps to understand pass-by-address in parameter passing.
Program009:[c++] This program helps to understand how to return an array as return-type.

Recursion:
----------
Program010:[c++] This program helps to understand ascending phase and descending phase in recursive functions.
Program011:[c++] This program helps to understand how static variables work in recursive functions.
Program012:[c++] This program helps to understand how global variables work in recursive functions.
Program013:[c++] This program helps to understand tail recursion.
Program014:[c++] This program helps to understand head recursion.
Program015:[c++] This program helps to understand tree recursion.
Program016:[c++] This program helps to understand indirect recursion.
Program017:[c++] This program helps to understand nested recursion.

Special Recursive Problems:
---------------------------
Program018:[c++] This program finds the sum of the first 'n' natural numbers.
Program019:[c++] This program finds the factorial of a number.
Program020:[c++] This program finds the power(m, n).
Program021:[c++] This program optimized power(m, n).
Program022:[c++] This program finds the value of power(e, x) using taylor series.
Program023:[c++] This program finds the value of power(e, x) using taylor series(horner's rule).
Program024:[c++] This program finds the 'n'th element of the fibonacci series.
Program025:[c++] This program finds the 'n'th element of the fibonacci series(memoization).
Program026:[c++] This program finds the number of combinations.
Program027:[c++] This program finds the number of combinations(pascal's triangle).
Program028:[c++] This program finds the solution for the Tower of Hanoi problem.

ARRAY ADT:
------------
Program029:[c++] This program creates an array.
Program030:[c++] This program displays an array.
Program031:[c++] This program extends the size of an array.
Program032:[c++] This program appends an element at the end of an array.
Program033:[c++] This program inserts an element to an array.
Program034:[c++] This program deletes an element from an array.
Program035:[c++] This program performs linear search on an array.
Program036:[c++] This program performs binary search on a sorted array.
Program037:[c++] This program gets an element from an array.
Program038:[c++] This program sets an element in an array.
Program039:[c++] This program finds the max element in an array.
Program040:[c++] This program finds the min element in an array.
Program041:[c++] This program finds the sum of all the elements in an array.
Program042:[c++] This program finds the average of all the elements in an array.
Program043:[c++] This program reverses an array(using auxiliary array).
Program044:[c++] This program reverses an array(using swap function).
Program045:[c++] This program left shifts an array.
Program046:[c++] This program left rotates an array.
Program047:[c++] This program right shifts an array.
Program048:[c++] This program right rotates an array.
Program049:[c++] This program inserts an element to a sorted array.
Program050:[c++] This program checks if an array is sorted.
Program051:[c++] This program moves all the negative elements to the beginning of the array.
Program052:[c++] This program merges two sorted arrays.
Program053:[c++] This program concatenates two arrays.
Program054:[c++] This program checks if an element is present in an array.
Program055:[c++] This program performs union operation on two arrays.
Program056:[c++] This program performs union operation on two sorted arrays.
Program057:[c++] This program performs intersection operation on two arrays.
Program058:[c++] This program performs intersection operation on two sorted arrays.
Program059:[c++] This program performs difference operation on two arrays.
Program060:[c++] This program performs difference operation on two sorted arrays.
Program061:[c++] This program finds the single missing element in a sorted array.
Program062:[c++] This program finds multiple missing elements in a sorted array.
Program063:[c++] This program finds all the missing elements in an array.
Program064:[c++] This program finds all the duplicate elements in a sorted array.
Program065:[c++] This program counts the number of duplicate elements in a sorted array.
Program066:[c++] This program counts the number of duplicate elements in a sorted array(using hash table).
Program067:[c++] This program counts the number of duplicate elements in an array.
Program068:[c++] This program counts the number of duplicate elements in an array(using hash table).
Program069:[c++] This program removes all the duplicate elements in an array.
Program070:[c++] This program copies an array.
Program071:[c++] This program finds all the pairs whose sum is 'k'(A[i] + A[j] = k) in an array.
Program072:[c++] This program finds all the pairs whose sum is 'k'(A[i] + A[j] = k) in an array(using hash table).
Program073:[c++] This program finds all the pairs whose sum is 'k'(A[i] + A[j] = k) in a sorted array.
Program074:[c++] This program finds min and max element of an array simultaneously.

Strings:
--------
Program075:[c++] This program helps to understand how to create a string.
Program076:[c++] This program finds the length of a string.
Program077:[c++] This program copies a string.
Program078:[c++] This program converts all the upper-case characters to lower-case in a string.
Program079:[c++] This program converts all the lower-case characters to upper-case in a string.
Program080:[c++] This program toggles the characters(upper-case->lower-case and lower-case->upper-case) in a string.
Program081:[c++] This program counts the number of vowels in a string.
Program082:[c++] This program counts the number of consonants in a string.
Program083:[c++] This program counts the number of words in a string.
Program084:[c++] This program validates a string with only alphabets.
Program085:[c++] This program validates a string with only numbers.
Program086:[c++] This program validates a string with only alphabets and numbers.
Program087:[c++] This program reverses a string.
Program088:[c++] This program reverses a string(using swap function).
Program089:[c++] This program compares two strings lexicographically.
Program090:[c++] This program checks if a word is a palindrome.
Program091:[c++] This program checks if a sentence is a palindrome.
Program092:[c++] This program counts the number of duplicate characters in a string.
Program093:[c++] This program counts the number of duplicate characters in a string(using hash table).
Program096:[c++] This program identifies duplicate characters in a string.
Program097:[c++] This program extracts all the alphabets in their lower-case representation in a string.
Program098:[c++] This program checks if two strings are anagrams.
Program099:[c++] This program finds all the permutations of a string(using brute-force).
Program100:[c++] This program finds all the permutations of a string(using swap function).

Matrices(N X M):
----------------
Program101:[c++] This program creates a matrix.
Program102:[c++] This program displays a matrix.
Program103:[c++] This program represents a matrix in row-major form.
Program104:[c++] This program represents a matrix in column-major form.
Program180:[c++] This program finds the transpose of a matrix.

Square Matrices(N X N):
-----------------------
Program105:[c++] This program creates a square matrix.
Program106:[c++] This program displays a square matrix.
Program181:[c++] This program finds the transpose of a square matrix.

Special Square Matrices:
------------------------
Program107:[c++] This program optimizes a diagonal matrix.
Program108:[c++] This program optimizes a lower-triangular matrix in row-major form.
Program109:[c++] This program optimizes a lower-triangular matrix in column-major form.
Program110:[c++] This program optimizes a upper-triangular matrix in row-major form.
Program111:[c++] This program optimizes a upper-triangular matrix in column-major form.
Program112:[c++] This program optimizes a symmetric matrix.
Program113:[c++] This program optimizes a tridiagonal matrix.
Program114:[c++] This program optimizes a toeplitz matrix.

Sparse Matrix:
--------------
Program115:[c++] This program optimizes a sparse matrix using 3-column representation.
Program116:[c++] This program adds two sparse matrices using 3-column representation.

Polynomial Representation:
--------------------------
Program117:[c++] This program represents a polynomial using arrays.
Program118:[c++] This program displays a polynomial.
Program119:[c++] This program makes the polynomial ascending.
Program120:[c++] This program evaluates a polynomial.
Program121:[c++] This program adds two polynomials.

Linked List:
------------
Program122:[c++] This program creates a linked list.
Program123:[c++] This program creates a linked list from an array.
Program124:[c++] This program displays a linked list.
Program125:[c++] This program displays a linked list in reverse order.
Program126:[c++] This program counts the number of nodes in a linked list.
Program127:[c++] This program finds the sum of all the elements in a linked list.
Program128:[c++] This program finds the max element in a linked list.
Program129:[c++] This program finds the min element in a linked list.
Program130:[c++] This program finds the average of all the elements in a linked list.
Program131:[c++] This program performs linear search in a linked list.
Program132:[c++] This program appends an element at the end of a linked list.
Program133:[c++] This program inserts an element to a linked list.
Program134:[c++] This program inserts an element to a sorted linked list.
Program135:[c++] This program deletes an element from a linked list.
Program136:[c++] This program checks if a linked list is sorted.
Program137:[c++] This program removes all the duplicate elements in a sorted linked list.
Program138:[c++] This program reverses a linked list by reversing the data elements.
Program139:[c++] This program reverses a linked list by reversing the links.
Program140:[c++] This program concatenates two linked lists.
Program141:[c++] This program merges two sorted linked lists.
Program142:[c++] This program checks if a linked list contains loops.
Program143:[c++] This program finds the middle node in a linked list.
Program235:[c++] This program deletes a linked list.

Circular Linked List:
---------------------

Program144:[c++] This program creates a circular linked list.
Program145:[c++] This program creates a circular linked list from an array.
Program146:[c++] This program displays a circular linked list.
Program147:[c++] This program inserts an element to a circular linked list.
Program148:[c++] This program deletes an element in a circular linked list.
Program149:[c++] This program counts the number of nodes in a circular linked list.

Doubly Linked List:
-------------------

Program150:[c++] This program creates a doubly linked list.
Program151:[c++] This program creates a doubly linked list from an array.
Program152:[c++] This program counts the number of nodes in a doubly linked list.
Program153:[c++] This program displays a doubly linked list.
Program154:[c++] This program inserts an element to a doubly linked list.
Program155:[c++] This program deletes an element in a doubly linked list.
Program156:[c++] This program reverses a doubly linked list.

Circular Doubly Linked List:
----------------------------

Program157:[c++] This program creates a circular doubly linked list.
Program158:[c++] This program creates a circular doubly linked list from an array.
Program159:[c++] This program counts the number of nodes in a circular doubly linked list.
Program160:[c++] This program displays a circular doubly linked list.
Program161:[c++] This program inserts an element to a circular doubly linked list.
Program162:[c++] This program deletes an element in a circular doubly linked list.

Bit Manipulation:
-----------------

Program094:[c++] This program helps to understand masking.
Program095:[c++] This program helps to understand merging.
Program163:[c++] This program finds the index of the first set bit of a number.
Program164:[c++] This program finds the index of the first different bit of two numbers.

Stack ADT Using Arrays:
-----------------------

Program165:[c++] This program creates a stack.
Program166:[c++] This program checks if a stack is empty.
Program167:[c++] This program checks if a stack is full.
Program168:[c++] This program displays a stack.
Program169:[c++] This program pushes an element into a stack.
Program170:[c++] This program pops an element from a stack.
Program171:[c++] This program returns the top element of a stack.
Program172:[c++] This program peeks through a stack.

Stack ADT Using Linked List:
----------------------------

Program189:[c++] This program creates a stack.
Program190:[c++] This program creates a stack from an array.
Program191:[c++] This program checks if a stack is empty.
Program192:[c++] This program checks if a stack is full.
Program193:[c++] This program displays a stack.
Program194:[c++] This program pushes an element into a stack.
Program195:[c++] This program pops an element from a stack.

Queue ADT Using Arrays:
-----------------------

Program173:[c++] This program creates a queue.
Program174:[c++] This program checks if a queue is empty.
Program175:[c++] This program checks if a queue is full.
Program176:[c++] This program displays a queue.
Program177:[c++] This program inserts an element to a queue.
Program178:[c++] This program deletes an element from a queue.
Program179:[c++] This program resets a queue.

Queue ADT Using Linked List:
----------------------------

Program182:[c++] This program creates a queue.
Program183:[c++] This program creates a queue from an array.
Program184:[c++] This program checks if a queue is empty.
Program185:[c++] This program checks if a queue is full.
Program186:[c++] This program displays a queue.
Program187:[c++] This program inserts an element to a queue.
Program188:[c++] This program deletes an element from a queue.

Circular Queue ADT:
-------------------

Program196:[c++] This program creates a circular queue.
Program197:[c++] This program checks if a circular queue is empty.
Program198:[c++] This program checks if a circular queue is full.
Program199:[c++] This program displays a circular queue.
Program200:[c++] This program inserts an element to a circular queue.
Program201:[c++] This program deletes an element in a circular queue.

Binary Tree Using Arrays:
-------------------------

Program202:[c++] This program creates a binary tree.
Program203:[c++] This program finds the height of a binary tree.
Program204:[c++] This program creates a binary tree from an array.
Program205:[c++] This program displays a binary tree.
Program206:[c++] This program finds the left child of a node in a binary tree.
Program207:[c++] This program finds the right child of a node in a binary tree.
Program208:[c++] This program finds the parent of a node in a binary tree.

Binary Tree Using Linked List:
------------------------------

Program209:[c++] This program creates a binary tree.
Program210:[c++] This program creates a binary tree from an array.
Program218:[c++] This program creates a binary tree from user using queue.
Program211:[c++] This program displays a binary tree using pre-order traversal.
Program212:[c++] This program displays a binary tree using in-order traversal.
Program213:[c++] This program displays a binary tree using post-order traversal.
Program214:[c++] This program displays a binary tree using pre-order traversal using stack.
Program215:[c++] This program displays a binary tree using in-order traversal using stack.
Program216:[c++] This program displays a binary tree using post-order traversal using stack.
Program217:[c++] This program displays a binary tree using level-order traversal using queue.
Program219:[c++] This program counts the number of nodes in a binary tree.
Program220:[c++] This program counts the number of nodes with degree '2' in a binary tree.
Program225:[c++] This program counts the number of nodes with degree '1' in a binary tree.
Program221:[c++] This program finds the sum of all the nodes in a binary tree.
Program222:[c++] This program finds the height of a binary tree.
Program223:[c++] This program counts the number of leaf nodes in a binary tree.
Program224:[c++] This program counts the number of non-leaf nodes in a binary tree.

Binary Search Tree:
-------------------

Program226:[c++] This program inserts an element to a binary search tree.
Program227:[c++] This program creates a binary search tree from an array.
Program228:[c++] This program searches for an element in a binary search tree.

Sorting Techniques:
-------------------

Program229:[c++] This program demonstrates bubble sort.
Program230:[c++] This program makes bubble sort adaptive.
Program231:[c++] This program finds the first 'n' largest elements in an array using bubble sort.
Program232:[c++] This program demonstrates insertion sort in an array.
Program233:[c++] This program demonstrates insertion sort in a linked list.
Program234:[c++] This program demonstrates selection sort.
Program236:[c++] This program finds the first 'n' smallest elements in an array using selection sort.

Undirected Graph Representation Using Adjacency Matrix:
-------------------------------------------------------

Program237:[c++] This program creates an undirected graph.
Program240:[c++] This program displays an undirected graph.
Program239:[c++] This program deletes an undirected graph.
Program238:[c++] This program inserts an edge in an undirected graph.
Program241:[c++] This program removes an edge from an undirected graph.
Program242:[c++] This program creates an undirected graph from an array of edges.
Program243:[c++] This program creates an undirected graph from user.

